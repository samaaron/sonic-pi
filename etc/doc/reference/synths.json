{
  "bass_foundation": {
    "name": "Bass Foundation",
    "description": "A soft bass synth inspired by the sounds of the 80s. Use together with :bass_highend if you want to give it a gargling component. Adapted for Sonic Pi from [Steal This Sound](https://raw.githubusercontent.com/supercollider/supercollider/develop/examples/demonstrations/stealthissound.scd). Published there under [GPL v3](https://www.gnu.org/licenses/gpl-3.0.en.html), so re-published under the same terms. The source code is available [on the Sonic Pi GitHub repository](https://github.com/sonic-pi-net/sonic-pi). Date of modification: 10.01.2021",
    "introduced": "v3.3",
    "usage": {
      "function": "use_synth",
      "args": {
        ":bass_foundation": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 40,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0.01,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0.9,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0.05,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 83,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "bass_highend": {
    "name": "Bass Highend",
    "description": "An addition to the :bass_foundation synth inspired by the sounds of the 80s. Use them together if you want to give it a rough, slurping, or gargling component. Adapted for Sonic Pi from [Steal This Sound](https://raw.githubusercontent.com/supercollider/supercollider/develop/examples/demonstrations/stealthissound.scd). Published there under [GPL v3](https://www.gnu.org/licenses/gpl-3.0.en.html), so re-published under the same terms. The source code is available [on the Sonic Pi GitHub repository](https://github.com/sonic-pi-net/sonic-pi). Date of modification: 11.01.2021",
    "introduced": "v3.3",
    "usage": {
      "function": "use_synth",
      "args": {
        ":bass_highend": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 40,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0.01,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0.9,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0.05,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 102,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      },
      "drive": {
        "description": "Higher drive values make the sound louder and rougher.",
        "default": 2.0,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "beep": {
    "name": "Sine Wave",
    "description": "A simple pure sine wave. The sine wave is the simplest, purest sound there is and is the fundamental building block of all noise. The mathematician Fourier demonstrated that any sound could be built out of a number of sine waves (the more complex the sound, the more sine waves needed). Have a play combining a number of sine waves to design your own sounds!",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":beep": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "blade": {
    "name": "Blade Runner style strings",
    "description": "Straight from the 70s, evoking the mists of Blade Runner, this simple electro-style string synth is based on filtered saw waves and a variable vibrato.",
    "introduced": "v2.6",
    "usage": {
      "function": "use_synth",
      "args": {
        ":blade": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "vibrato_rate": {
        "description": "Number of wobbles per second. For realism this should be between 6 and 8, maybe even faster for really high notes.",
        "default": 6,
        "bpm_scale": null,
        "constraints": [
          "must be a value greater than or equal to 0.0",
          "must be a value less than or equal to 20.0"
        ],
        "modulatable": true,
        "slidable": true
      },
      "vibrato_depth": {
        "description": "Amount of variation around the central note. 1 is the sensible maximum (but you can go up to 5 if you want a special effect), 0 would mean no vibrato. Works well around 0.15 but you can experiment.",
        "default": 0.15,
        "bpm_scale": null,
        "constraints": [
          "must be a value greater than or equal to 0.0",
          "must be a value less than or equal to 5.0"
        ],
        "modulatable": true,
        "slidable": true
      },
      "vibrato_delay": {
        "description": "How long in seconds before the vibrato kicks in.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "vibrato_onset": {
        "description": "How long in seconds before the vibrato reaches full power.",
        "default": 0.1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "bnoise": {
    "name": "Brown Noise",
    "description": "Noise whose spectrum falls off in power by 6 dB per octave. Useful for generating percussive sounds such as snares and hand claps. Also useful for simulating wind or sea effects.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":bnoise": "symbol"
      }
    },
    "opts": {
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 110,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "chipbass": {
    "name": "Chip Bass",
    "description": "A 16 step triangle wave modelled after the 2A03 chip found in voice 3 of the NES games console. This can be used for retro sounding basslines. For complete authenticity with the 2A03 bear in mind that the triangle channel on that chip didn't have a volume control.",
    "introduced": "v2.10",
    "usage": {
      "function": "use_synth",
      "args": {
        ":chipbass": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 60,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "note_resolution": {
        "description": "Locks down the note resolution to be multiples of this (MIDI) number. For example, a `note_resolution:` of 1 will only allow semitones to be played. When used in conjunction with `note_slide:` produces a staircase of notes rather than a continuous line which is how things were on the NES. Set to 0 to disable. This wasn't a feature of this triangle (bass) channel on the original chip but some emulators have added it in since.",
        "default": 0.1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": null
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "chiplead": {
    "name": "Chip Lead",
    "description": "A slightly clipped square (pulse) wave with phases of 12.5%, 25% or 50% modelled after the 2A03 chip found in voices 1 and 2 of the NES games console. This can be used for retro sounding leads and harmonised lines. This also adds an opt 'note_resolution' which locks the note slide to certain pitches which are multiples of the step size. This allows for emulation of the sweep setting on the 2A03.",
    "introduced": "v2.10",
    "usage": {
      "function": "use_synth",
      "args": {
        ":chiplead": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 60,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "note_resolution": {
        "description": "Locks down the note resolution to be multiples of this (MIDI) number. For example, a `note_resolution:` of 1 will only allow semitones to be played. When used in conjunction with `note_slide:` produces a staircase of notes rather than a continuous line which is how things were on the NES. Set to 0 to disable. This wasn't a feature of this triangle (bass) channel on the original chip but some emulators have added it in since.",
        "default": 0.1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": null
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "width": {
        "description": "Which of the three pulse_widths to use - 0 => 12.5%, 1 => 25%, 2 => 50%",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2]"
        ],
        "modulatable": true,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "chipnoise": {
    "name": "Chip Noise",
    "description": "Generates noise whose values are either -1 or 1 (like a pulse or square wave) with one of 16 particular frequencies. This is similar to the noise channel on the 2A03 chip used in the NES games console, although it lacks the same Pseudo-Random Number Generator (PRNG) and doesn't implement the 2A03's lesser used noise mode. The amplitude envelope defaults to moving by step to keep that 16 bit feel and this synth also has a slight soft clipping to better imitate the original sound of the device. Use for retro effects, hand claps, snare drums and hi-hats.",
    "introduced": "v2.10",
    "usage": {
      "function": "use_synth",
      "args": {
        ":chipnoise": "symbol"
      }
    },
    "opts": {
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "freq_band": {
        "description": "Which of the 16 frequency bands to use, from 0 to 15. These range from 220Hz to 225kHz as on the original chip. This arg will accept floats but round to the nearest integer to allow for sweeping through the 16 set points with envelopes.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 15 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "cnoise": {
    "name": "Clip Noise",
    "description": "Generates noise whose values are either -1 or 1. This produces the maximum energy for the least peak to peak amplitude. Useful for generating percussive sounds such as snares and hand claps. Also useful for simulating wind or sea effects.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":cnoise": "symbol"
      }
    },
    "opts": {
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 110,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "dark_ambience": {
    "name": "Dark Ambience",
    "description": "A slow rolling bass with a sparkle of light trying to escape the darkness. Great for an ambient sound.",
    "introduced": "v2.4",
    "usage": {
      "function": "use_synth",
      "args": {
        ":dark_ambience": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 110,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.7,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      },
      "detune1": {
        "description": "Distance (in MIDI notes) between the main note and the second component of sound. Affects thickness, sense of tuning and harmony.",
        "default": 12,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": null,
        "slidable": true
      },
      "detune2": {
        "description": "Distance (in MIDI notes) between the main note and the third component of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound.",
        "default": 24,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": null,
        "slidable": true
      },
      "noise": {
        "description": "Noise source. Has a subtle effect on the timbre of the sound. 0=pink noise (the default), 1=brown noise, 2=white noise, 3=clip noise and 4=grey noise",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2, 3, 4]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "ring": {
        "description": "Amount of ring in the sound. Lower values create a more rough sound, higher values produce a sound with more focus.",
        "default": 0.2,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0.1 and 50 inclusively"
        ],
        "modulatable": true,
        "slidable": null
      },
      "room": {
        "description": "Room size in squared metres used to calculate the reverb.",
        "default": 70,
        "bpm_scale": null,
        "constraints": [
          "must be a value greater than or equal to 0.1",
          "must be a value less than or equal to 300"
        ],
        "modulatable": false,
        "slidable": null
      },
      "reverb_time": {
        "description": "How long in beats the reverb should go on for.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "dpulse": {
    "name": "Detuned Pulse Wave",
    "description": "A pair of detuned pulse waves passed through a low pass filter. Two pulse waves with slightly different frequencies generates a nice thick sound which can be used as a basis for some nice bass sounds. Thicken the sound by increasing the detune value, or create an octave-playing synth by choosing a detune of 12 (12 MIDI notes is an octave). Each pulse wave can also have individual widths (although the default is for the detuned pulse to mirror the width of the main pulse).",
    "introduced": "v2.8",
    "usage": {
      "function": "use_synth",
      "args": {
        ":dpulse": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "detune": {
        "description": "Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.",
        "default": 0.1,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "pulse_width": {
        "description": "The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "dpulse_width": {
        "description": "The width of the second detuned pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.",
        "default": "pulse_width",
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "dsaw": {
    "name": "Detuned Saw wave",
    "description": "A pair of detuned saw waves passed through a low pass filter. Two saw waves with slightly different frequencies generates a nice thick sound which is the basis for a lot of famous synth sounds. Thicken the sound by increasing the detune value, or create an octave-playing synth by choosing a detune of 12 (12 MIDI notes is an octave).",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":dsaw": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "detune": {
        "description": "Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.",
        "default": 0.1,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "dtri": {
    "name": "Detuned Triangle Wave",
    "description": "A pair of detuned triangle waves passed through a low pass filter. Two pulse waves with slightly different frequencies generates a nice thick sound which can be used as a basis for some nice bass sounds. Thicken the sound by increasing the detune value, or create an octave-playing synth by choosing a detune of 12 (12 MIDI notes is an octave).",
    "introduced": "v2.10",
    "usage": {
      "function": "use_synth",
      "args": {
        ":dtri": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "detune": {
        "description": "Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.",
        "default": 0.1,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "dull_bell": {
    "name": "Dull Bell",
    "description": "A simple dull discordant bell sound.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":dull_bell": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "fm": {
    "name": "Basic FM synthesis",
    "description": "A sine wave with a fundamental frequency which is modulated at audio rate by another sine wave with a specific modulation, division and depth. Useful for generating a wide range of sounds by playing with the divisor and depth params. Great for deep powerful bass and crazy 70s sci-fi sounds.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":fm": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "divisor": {
        "description": "Modifies the frequency of the modulator oscillator relative to the carrier. Don't worry too much about what this means - just try different numbers out!",
        "default": 2,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "depth": {
        "description": "Modifies the depth of the carrier wave used to modify fundamental frequency. Don't worry too much about what this means - just try different numbers out!",
        "default": 1,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "gnoise": {
    "name": "Grey Noise",
    "description": "Generates noise which results from flipping random bits in a word. The spectrum is emphasised towards lower frequencies. Useful for generating percussive sounds such as snares and hand claps. Also useful for simulating wind or sea effects.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":gnoise": "symbol"
      }
    },
    "opts": {
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 110,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "growl": {
    "name": "Growl",
    "description": "A deep rumbling growl with a bright sine shining through at higher notes.",
    "introduced": "v2.4",
    "usage": {
      "function": "use_synth",
      "args": {
        ":growl": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0.1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 130,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.7,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "hollow": {
    "name": "Hollow",
    "description": "A hollow breathy sound constructed from random noise",
    "introduced": "v2.4",
    "usage": {
      "function": "use_synth",
      "args": {
        ":hollow": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 90,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Only functional if a cutoff value is specified. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.99,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      },
      "noise": {
        "description": "Noise source. Has a subtle effect on the timbre of the sound. 0=pink noise, 1=brown noise (the default), 2=white noise, 3=clip noise and 4=grey noise",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2, 3, 4]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "norm": {
        "description": "Normalise the audio (make quieter parts of the synth's sound louder and louder parts quieter) - this is similar to the normaliser FX. This may emphasise any clicks caused by clipping.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": true,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "hoover": {
    "name": "Hoover",
    "description": "Classic early 90's rave synth - 'a sort of slurry chorussy synth line like the classic Dominator by Human Resource'. Based on Dan Stowell's implementation in SuperCollider and Daniel Turczanski's port to Overtone. Works really well with portamento (see docs for the 'control' method).",
    "introduced": "v2.6",
    "usage": {
      "function": "use_synth",
      "args": {
        ":hoover": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0.05,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 130,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "kalimba": {
    "name": "Kalimba",
    "description": "A synthesised kalimba (a type of African thumb piano). Note that due to the plucked nature of this synth the envelope opts such as `attack:`, `sustain:` and `release:` do not work as expected. They can only shorten the natural length of the note, not prolong it. Note the default envelope is longer than usual - sustain: 4 and release: 1",
    "introduced": "v3.3",
    "usage": {
      "function": "use_synth",
      "args": {
        ":kalimba": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. With the kalimba synth, this opt can only have the effect of shortening the attack phase, not prolonging it.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level). With the kalimba synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. With the kalimba synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.",
        "default": 4,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. With the kalimba synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "clickiness": {
        "description": "Ratio of percussive click to melodic note in the sound. A low clickiness like 0.1 works well - higher values might give the impression that the instrument is being played harder. Very high values (towards 1) will be louder!",
        "default": 0.1,
        "bpm_scale": false,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "mod_dsaw": {
    "name": "Modulated Detuned Saw Waves",
    "description": "A pair of detuned saw waves (see the dsaw synth) which are modulated between two fixed notes at a given rate.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":mod_dsaw": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase": {
        "description": "Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.",
        "default": 0.25,
        "bpm_scale": true,
        "constraints": [
          "must be greater than zero"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_range": {
        "description": "The size of gap between modulation notes. A gap of 12 is one octave.",
        "default": 5,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_pulse_width": {
        "description": "The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase_offset": {
        "description": "Initial modulation phase offset (a value between 0 and 1).",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "mod_invert_wave": {
        "description": "Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "mod_wave": {
        "description": "Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2, 3]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "detune": {
        "description": "Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.",
        "default": 0.1,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "mod_fm": {
    "name": "Basic FM synthesis with frequency modulation.",
    "description": "The FM synth modulating between two notes - the duration of the modulation can be modified using the mod_phase arg, the range (number of notes jumped between) by the mod_range arg and the width of the jumps by the mod_width param. The FM synth is a sine wave with a fundamental frequency which is modulated at audio rate by another sine wave with a specific modulation, division and depth. Useful for generating a wide range of sounds by playing with the `:divisor` and `:depth` params. Great for deep powerful bass and crazy 70s sci-fi sounds.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":mod_fm": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "divisor": {
        "description": "Modifies the frequency of the modulator oscillator relative to the carrier. Don't worry too much about what this means - just try different numbers out!",
        "default": 2,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "depth": {
        "description": "Modifies the depth of the carrier wave used to modify fundamental frequency. Don't worry too much about what this means - just try different numbers out!",
        "default": 1,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase": {
        "description": "Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.",
        "default": 0.25,
        "bpm_scale": true,
        "constraints": [
          "must be greater than zero"
        ],
        "modulatable": true,
        "slidable": null
      },
      "mod_range": {
        "description": "The size of gap between modulation notes. A gap of 12 is one octave.",
        "default": 5,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": null
      },
      "mod_pulse_width": {
        "description": "The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": null
      },
      "mod_phase_offset": {
        "description": "Initial modulation phase offset (a value between 0 and 1).",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "mod_invert_wave": {
        "description": "Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "mod_wave": {
        "description": "Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2, 3]"
        ],
        "modulatable": true,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "mod_pulse": {
    "name": "Modulated Pulse",
    "description": "A pulse wave with a low pass filter modulating between two notes via a variety of control waves (see mod_wave: arg). The pulse wave defaults to a square wave, but the timbre can be changed dramatically by adjusting the pulse_width arg between 0 and 1.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":mod_pulse": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase": {
        "description": "Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.",
        "default": 0.25,
        "bpm_scale": true,
        "constraints": [
          "must be greater than zero"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_range": {
        "description": "The size of gap between modulation notes. A gap of 12 is one octave.",
        "default": 5,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_pulse_width": {
        "description": "The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase_offset": {
        "description": "Initial modulation phase offset (a value between 0 and 1).",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "mod_invert_wave": {
        "description": "Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "mod_wave": {
        "description": "Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2, 3]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "pulse_width": {
        "description": "The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "mod_saw": {
    "name": "Modulated Saw Wave",
    "description": "A saw wave passed through a low pass filter which modulates between two separate notes via a variety of control waves.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":mod_saw": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase": {
        "description": "Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.",
        "default": 0.25,
        "bpm_scale": true,
        "constraints": [
          "must be greater than zero"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_range": {
        "description": "The size of gap between modulation notes. A gap of 12 is one octave.",
        "default": 5,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_pulse_width": {
        "description": "The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase_offset": {
        "description": "Initial modulation phase offset (a value between 0 and 1).",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "mod_invert_wave": {
        "description": "Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "mod_wave": {
        "description": "Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2, 3]"
        ],
        "modulatable": true,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "mod_sine": {
    "name": "Modulated Sine Wave",
    "description": "A sine wave passed through a low pass filter which modulates between two separate notes via a variety of control waves.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":mod_sine": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase": {
        "description": "Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.",
        "default": 0.25,
        "bpm_scale": true,
        "constraints": [
          "must be greater than zero"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_range": {
        "description": "The size of gap between modulation notes. A gap of 12 is one octave.",
        "default": 5,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_pulse_width": {
        "description": "The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase_offset": {
        "description": "Initial modulation phase offset (a value between 0 and 1).",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "mod_invert_wave": {
        "description": "Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "mod_wave": {
        "description": "Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2, 3]"
        ],
        "modulatable": true,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "mod_tri": {
    "name": "Modulated Triangle Wave",
    "description": "A triangle wave passed through a low pass filter which modulates between two separate notes via a variety of control waves.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":mod_tri": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase": {
        "description": "Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.",
        "default": 0.25,
        "bpm_scale": true,
        "constraints": [
          "must be greater than zero"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_range": {
        "description": "The size of gap between modulation notes. A gap of 12 is one octave.",
        "default": 5,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_pulse_width": {
        "description": "The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "mod_phase_offset": {
        "description": "Initial modulation phase offset (a value between 0 and 1).",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "mod_invert_wave": {
        "description": "Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "mod_wave": {
        "description": "Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2, 3]"
        ],
        "modulatable": true,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "noise": {
    "name": "Noise",
    "description": "Noise that contains equal amounts of energy at every frequency - comparable to radio static. Useful for generating percussive sounds such as snares and hand claps. Also useful for simulating wind or sea effects.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":noise": "symbol"
      }
    },
    "opts": {
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 110,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "piano": {
    "name": "Piano",
    "description": "A basic piano synthesiser. Note that due to the plucked nature of this synth the envelope opts such as `attack:`, `sustain:` and `release:` do not work as expected. They can only shorten the natural length of the note, not prolong it.",
    "introduced": "v2.6",
    "usage": {
      "function": "use_synth",
      "args": {
        ":piano": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, 56.5, `:C`, `:C2`, `:Eb4`, or `:Ds3`.",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 231"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "vel": {
        "description": "Velocity of keypress. ",
        "default": 0.2,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. With the piano synth, this opt can only have the effect of shortening the attack phase, not prolonging it.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level). With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "hard": {
        "description": "Hardness of keypress. ",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "stereo_width": {
        "description": "Width of the stereo effect (which makes low notes sound towards the left, high notes towards the right). 0 to 1.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "pluck": {
    "name": "Pluck",
    "description": "A basic plucked string synthesiser that uses Karplus-Strong synthesis. Note that due to the plucked nature of this synth the envelope opts such as `attack:`, `sustain:` and `release:` do not work as expected. They can only shorten the natural length of the note, not prolong it. Also, the `note:` opt will only honour whole tones.",
    "introduced": "v2.10",
    "usage": {
      "function": "use_synth",
      "args": {
        ":pluck": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`. Note that the piano synth can only play whole tones such as 60 and does not handle floats such as 60.3",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level). With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "noise_amp": {
        "description": "Amplitude of source (pink) noise.",
        "default": 0.8,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "max_delay_time": {
        "description": "Maximum length of the delay line buffer.",
        "default": 0.125,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0.125 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "pluck_decay": {
        "description": "How long the pluck takes to stabilise on a note. This doesn't have a dramatic effect on the sound.",
        "default": 30,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 1 and 100 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "coef": {
        "description": "Coefficient of the internal OnePole filter. Values around zero are resonant and bright, values towards 1 sound more dampened and cutoff. It's a little bit like playing nearer the soundhole/fingerboard for values near zero and more toward the bridge for values approaching one, although this isn't an exact comparison.",
        "default": 0.3,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "pnoise": {
    "name": "Pink Noise",
    "description": "Noise whose spectrum falls off in power by 3 dB per octave. Useful for generating percussive sounds such as snares and hand claps. Also useful for simulating wind or sea effects.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":pnoise": "symbol"
      }
    },
    "opts": {
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 110,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "pretty_bell": {
    "name": "Pretty Bell",
    "description": "A pretty bell sound. Works well with short attacks and long decays.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":pretty_bell": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "prophet": {
    "name": "The Prophet",
    "description": "Dark and swirly, this synth uses Pulse Width Modulation (PWM) to create a timbre which continually moves around. This effect is created using the pulse ugen which produces a variable width square wave. We then control the width of the pulses using a variety of LFOs - sin-osc and lf-tri in this case. We use a number of these LFO modulated pulse ugens with varying LFO type and rate (and phase in some cases) to provide the LFO with a different starting point. We then mix all these pulses together to create a thick sound and then feed it through a resonant low pass filter (rlpf). For extra bass, one of the pulses is an octave lower (half the frequency) and its LFO has a little bit of randomisation thrown into its frequency component for that extra bit of variety.\n\nSynth design adapted from:\nThe Prophet Speaks (page 2)\nSteal This Sound,  Mitchell Sigman",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":prophet": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 110,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.7,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "pulse": {
    "name": "Pulse Wave",
    "description": "A simple pulse wave with a low pass filter. This defaults to a square wave, but the timbre can be changed dramatically by adjusting the pulse_width arg between 0 and 1. The pulse wave is thick and heavy with lower notes and is a great ingredient for bass sounds.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":pulse": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pulse_width": {
        "description": "The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "rodeo": {
    "name": "Rodeo",
    "description": "Classic 70's electric piano sound, with built-in compressor and chorus.",
    "introduced": "v3.3",
    "usage": {
      "function": "use_synth",
      "args": {
        ":rodeo": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0.8,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "use_chorus": {
        "description": "Enable the chorus effect (on by default).",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "use_compressor": {
        "description": "Enable the compressor (on by default).",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 72,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "saw": {
    "name": "Saw Wave",
    "description": "A saw wave with a low pass filter. Great for using with FX such as the built in low pass filter (available via the cutoff arg) due to the complexity and thickness of the sound.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":saw": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "sound_in": {
    "name": "Sound In",
    "description": "Treat sound card input as a synth. If your audio card has inputs, you may use this synth to feed the incoming audio into Sonic Pi. This synth will read in a single mono audio stream - for example from a standard microphone or guitar. See `:sound_in_stereo` for a similar synth capable of reading in a stereo signal.\n\nAs with all Sonic Pi synths, there is a default envelope which determines the duration of the lifetime of the synth. Therefore, to get a continuous stream of audio, you need to place consecutive calls to this synth in iteration or a `live_loop`. For example:\n\n```\nlive_loop :playback do\n```\n\n```\n   synth :sound_in, sustain: 8\n```\n\n```\n   sleep 8\n```\n\n```\nend\n```\n\nNote that if the microphone and speaker are close together (on a laptop or in a small room) you will potentially get a harsh feedback sound.\n\nAlso, note that audio in isn't yet supported on Raspberry Pi.",
    "introduced": "v2.10",
    "usage": {
      "function": "use_synth",
      "args": {
        ":sound_in": "symbol"
      }
    },
    "opts": {
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "input": {
        "description": "Sound card input channel to obtain audio from. Indexing starts at 1 so input 1 represents the first channel, and channel 2 can be represented by `input: 2`",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be a value greater than or equal to 1"
        ],
        "modulatable": true,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "sound_in_stereo": {
    "name": "Sound In Stereo",
    "description": "Treat sound card input as a synth. If your audio card has inputs, you may use this synth to feed the incoming audio into Sonic Pi. This synth will read in a stereo audio stream - for example from a stereo microphone or external stereo keyboard. See `:sound_in` for a similar synth capable of reading in a mono signal. The stereo input is expected to be on consecutive sound card channels.\n\nAs with all Sonic Pi synths, there is a default envelope which determines the duration of the lifetime of the synth. Therefore, to get a continuous stream of audio, you need to place consecutive calls to this synth in iteration or a `live_loop`. For example:\n\n```\nlive_loop :playback do\n```\n\n```\n   synth :sound_in_stereo, sustain: 8\n```\n\n```\n   sleep 8\n```\n\n```\nend\n```\n\nNote that if the microphone and speaker are close together (on a laptop or in a small room) you will potentially get a harsh feedback sound.\n\nAlso, note that audio in isn't yet supported on Raspberry Pi.",
    "introduced": "v2.10",
    "usage": {
      "function": "use_synth",
      "args": {
        ":sound_in_stereo": "symbol"
      }
    },
    "opts": {
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "input": {
        "description": "First of two consecutive sound card input channels to obtain audio from. Indexing starts at 1 so input 1 represents the first channel, and channel 2 can be represented by `input: 2`",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be a value greater than or equal to 1"
        ],
        "modulatable": true,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "square": {
    "name": "Square Wave",
    "description": "A simple square wave with a low pass filter. The square wave is thick and heavy with lower notes and is a great ingredient for bass sounds. If you wish to modulate the width of the square wave see the synth pulse.",
    "introduced": "v2.2",
    "usage": {
      "function": "use_synth",
      "args": {
        ":square": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "subpulse": {
    "name": "Pulse Wave with sub",
    "description": "A pulse wave with a sub sine wave passed through a low pass filter. The pulse wave is thick and heavy with lower notes and is a great ingredient for bass sounds - especially with the sub wave.",
    "introduced": "v2.6",
    "usage": {
      "function": "use_synth",
      "args": {
        ":subpulse": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pulse_width": {
        "description": "The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "sub_amp": {
        "description": "Amplitude for the additional sine wave.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "sub_detune": {
        "description": "Amount of detune from the note for the additional sine wave. Default is -12",
        "default": -12,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "supersaw": {
    "name": "Supersaw",
    "description": "Thick swirly saw waves sparkling and moving about to create a rich trancy sound.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":supersaw": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 130,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.7,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "tb303": {
    "name": "TB-303 Emulation",
    "description": "Emulation of the classic Roland TB-303 Bass Line synthesiser. Overdrive the res (i.e. use very large values) for that classic late 80s acid sound.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":tb303": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "The maximum cutoff value as a MIDI note",
        "default": 120,
        "bpm_scale": null,
        "constraints": [
          "must be a value less than or equal to 130"
        ],
        "modulatable": true,
        "slidable": true
      },
      "cutoff_min": {
        "description": "The minimum cutoff value.",
        "default": 30,
        "bpm_scale": null,
        "constraints": [
          "must be a value less than or equal to 130"
        ],
        "modulatable": true,
        "slidable": true
      },
      "cutoff_attack": {
        "description": "Attack time for cutoff filter. Amount of time (in beats) for sound to reach full cutoff value. Default value is set to match amp envelope's attack value.",
        "default": "attack",
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff_decay": {
        "description": "Decay time for cutoff filter. Amount of time (in beats) for sound to move from full cutoff value (cutoff attack level) to the cutoff sustain level. Default value is set to match amp envelope's decay value.",
        "default": "decay",
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff_sustain": {
        "description": "Amount of time for cutoff value to remain at sustain level in beats. Default value is set to match amp envelope's sustain value.",
        "default": "sustain",
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff_release": {
        "description": "Amount of time (in beats) for sound to move from cutoff sustain value to cutoff min value. Default value is set to match amp envelope's release value.",
        "default": "release",
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff_attack_level": {
        "description": "The peak cutoff (value of cutoff at peak of attack) as a value between 0 and 1 where 0 is the :cutoff_min and 1 is the :cutoff value",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff_decay_level": {
        "description": "The level of cutoff after the decay phase as a value between 0 and 1 where 0 is the :cutoff_min and 1 is the :cutoff value",
        "default": "cutoff_sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff_sustain_level": {
        "description": "The sustain cutoff (value of cutoff at sustain time) as a value between 0 and 1 where 0 is the :cutoff_min and 1 is the :cutoff value.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.9,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      },
      "wave": {
        "description": "Wave type - 0 saw, 1 pulse, 2 triangle. Different waves will produce different sounds.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "pulse_width": {
        "description": "The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "tech_saws": {
    "name": "TechSaws",
    "description": "Slightly modified supersaw implementation based on http://sccode.org/1-4YS",
    "introduced": "v2.11",
    "usage": {
      "function": "use_synth",
      "args": {
        ":tech_saws": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 130,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.7,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "tri": {
    "name": "Triangle Wave",
    "description": "A simple triangle wave with a low pass filter.",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":tri": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "env_curve": {
        "description": "Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed",
        "default": 2,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [1, 2, 3, 4, 6, 7]"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pulse_width": {
        "description": "The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "winwood_lead": {
    "name": "Winwood Lead",
    "description": "A lead synth inspired by the Winwood songs from the early 80s.  Adapted for Sonic Pi from [Steal This Sound](https://raw.githubusercontent.com/supercollider/supercollider/develop/examples/demonstrations/stealthissound.scd). Published there under [GPL v3](https://www.gnu.org/licenses/gpl-3.0.en.html), so re-published under the same terms. The source code is available [on the Sonic Pi GitHub repository](https://github.com/sonic-pi-net/sonic-pi). Date of modification: 10.01.2021",
    "introduced": "v3.3",
    "usage": {
      "function": "use_synth",
      "args": {
        ":winwood_lead": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 69,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0.01,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0.9,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0.05,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 119,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.8,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      },
      "lfo_width": {
        "description": "Width of the low-frequency oscillator (LFO) which determines how wide base tones oscillate around their base frequencies",
        "default": 0.01,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "lfo_rate": {
        "description": "Width of the low-frequency oscillator (LFO) which determines how fast base tones oscillate around their base frequencies",
        "default": 8,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": true,
        "slidable": true
      },
      "seed": {
        "description": "Seed value for rand num generator used for the phase offset of the triangle low-frequency oscillator (LFO)",
        "default": 0,
        "bpm_scale": null,
        "constraints": [

        ],
        "modulatable": false,
        "slidable": null
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  },
  "zawa": {
    "name": "Zawa",
    "description": "Saw wave with oscillating timbre. Produces moving saw waves with a unique character controllable with the control oscillator (usage similar to mod synths).",
    "introduced": "v2.0",
    "usage": {
      "function": "use_synth",
      "args": {
        ":zawa": "symbol"
      }
    },
    "opts": {
      "note": {
        "description": "Note to play. Either a MIDI number or a symbol representing a note. For example: `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`",
        "default": 52,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "amp": {
        "description": "The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": true,
        "slidable": true
      },
      "pan": {
        "description": "Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between -1 and 1 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "attack": {
        "description": "Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay": {
        "description": "Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain": {
        "description": "Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.",
        "default": 0,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "release": {
        "description": "Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "attack_level": {
        "description": "Amplitude level reached after attack phase and immediately before decay phase",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "decay_level": {
        "description": "Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set",
        "default": "sustain_level",
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "sustain_level": {
        "description": "Amplitude level reached after decay phase and immediately before release phase.",
        "default": 1,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater"
        ],
        "modulatable": false,
        "slidable": null
      },
      "cutoff": {
        "description": "MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.",
        "default": 100,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 131"
        ],
        "modulatable": true,
        "slidable": true
      },
      "res": {
        "description": "Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.",
        "default": 0.9,
        "bpm_scale": null,
        "constraints": [
          "must be zero or greater",
          "must be a value less than 1"
        ],
        "modulatable": true,
        "slidable": true
      },
      "phase": {
        "description": "Phase duration in beats of timbre modulation.",
        "default": 1,
        "bpm_scale": true,
        "constraints": [
          "must be greater than zero"
        ],
        "modulatable": true,
        "slidable": true
      },
      "phase_offset": {
        "description": "Initial phase offset of the sync wave (a value between 0 and 1).",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 inclusively"
        ],
        "modulatable": false,
        "slidable": null
      },
      "wave": {
        "description": "Wave shape controlling freq sync saw wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.",
        "default": 3,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1, 2, 3]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "invert_wave": {
        "description": "Invert sync freq control waveform (i.e. flip it on the y axis). 0=uninverted wave, 1=inverted wave.",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "range": {
        "description": "Range of the associated sync saw in MIDI notes from the main note. Modifies timbre.",
        "default": 24,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 90 inclusively"
        ],
        "modulatable": true,
        "slidable": true
      },
      "disable_wave": {
        "description": "Enable and disable sync control wave (setting to 1 will stop timbre movement).",
        "default": 0,
        "bpm_scale": null,
        "constraints": [
          "must be one of the following values: [0, 1]"
        ],
        "modulatable": true,
        "slidable": null
      },
      "pulse_width": {
        "description": "The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.",
        "default": 0.5,
        "bpm_scale": null,
        "constraints": [
          "must be a value between 0 and 1 exclusively"
        ],
        "modulatable": true,
        "slidable": true
      }
    },
    "slide": {
      "slide_doc": "Any parameter that is slidable has three additional options named _slide, _slide_curve, and _slide_shape.  For example, 'amp' is slidable, so you can also set amp_slide, amp_slide_curve, and amp_slide_shape with the following effects:",
      "slide_args": {
        "_slide": {
          "default": 0,
          "doc": "Amount of time (in beats) for the parameter value to change. A long parameter_slide value means that the parameter takes a long time to slide from the previous value to the new value. A parameter_slide of 0 means that the parameter instantly changes to the new value."
        },
        "_slide_shape": {
          "default": 5,
          "doc": "Shape of curve. 0: step, 1: linear, 3: sine, 4: welch, 5: custom (use *_slide_curve: opt e.g. amp_slide_curve:), 6: squared, 7: cubed. "
        },
        "_slide_curve": {
          "default": 0,
          "doc": "Shape of the slide curve (only honoured if slide shape is 5). 0 means linear and positive and negative numbers curve the segment up and down respectively."
        }
      }
    }
  }
}